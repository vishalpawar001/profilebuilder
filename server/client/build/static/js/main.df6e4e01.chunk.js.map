{"version":3,"sources":["redux/actionTypes.js","redux/validation/is-empty.js","redux/reducer/facultyReducer.js","redux/reducer/adminReducer.js","redux/reducer/studentReducer.js","redux/reducer/errorReducerHelper.js","redux/reducer/errorReducer.js","redux/reducer/rootReducer.js","redux/store.js","redux/utils/setAuthToken.js","redux/action/facultyAction.js","redux/action/adminAction.js","redux/action/studentAction.js","Pages/LoginPage.jsx","Components/HomeHelper.jsx","Pages/StudentHome.jsx","Pages/StudentAddSkill.jsx","Pages/StudentDetails.jsx","Components/FacultyHomeHelper.jsx","Pages/FacultyInterface.jsx","Pages/AttendenceFaculty.jsx","Pages/ApproveRequest.jsx","Components/AdminHomeHelper.jsx","Pages/AdminAddStudent.jsx","Pages/AdminAddFaculty.jsx","Pages/StudentAttendencePage.jsx","Pages/FacultyStudentLoginPags.jsx","Pages/StudentUpdatePassword.jsx","Pages/FacultyUpdatePassword.jsx","Pages/ForgotPassword.jsx","Pages/RecieverUserDetails.jsx","Pages/StudentUpdateProfile.jsx","Pages/Student/StudentSubjectList.jsx","Pages/Faculty/FacultyUploadMarks.jsx","Pages/Faculty/FacultyUpdateProfile.jsx","Pages/Student/StudentTestPerformance.jsx","Pages/Admin/AdminAddAdmin.jsx","Pages/Admin/AdminGetAllFaculty.jsx","Pages/Admin/AdminGetAllStudents.jsx","Pages/Admin/AdminGetAllSubjects.jsx","Pages/Admin/AdminHome.jsx","App.js","index.js"],"names":["SET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","faculty","flag","updateProfileFlag","allSubjectCodeList","fetchedStudents","fetchedStudentsHelper","facultyReducer","state","action","type","payload","admin","adminAddFacultyFlag","adminAddStudentFlag","adminAddAdminFlag","adminAddSubjectFlag","allSubject","allFaculty","allStudent","adminReducer","student","alongsideStudent","chatHistory","regNumStudent","privateChat","privateChat2","newerChats","previousChats","allSubjects","attendence","allMarks","studentReducer","setErrorsHelper","setErrors","combineReducers","error","errorReducer","errorHelper","errorReducerHelper","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setFaculty","data","url","fetchStudentsHelper","subjectCodeListHelper","fetchStudents","department","year","section","dispatch","a","method","result","subjectCode","response","facultyUpdateProfileFlag","facultyUpdate","updatedData","console","log","message","facultyLogout","localStorage","removeItem","setAdmin","adminGetAllFacultyHelper","adminGetAllStudentHelper","adminGetAllSubjectHelper","adminLogout","setStudent","getStudentByRegNameHelper","getAllSubjectsHelper","fetchAttendenceHelper","getMarksHelper","studentUpdate","studentLogout","LoginPage","useSelector","useDispatch","useState","registrationNumber","setRegistrationNumber","password","setPassword","setError","isLoading","setIsLoading","history","useHistory","useEffect","push","className","noValidate","onSubmit","e","adminCredential","preventDefault","setItem","decoded","jwt_decode","htmlFor","onChange","target","classnames","id","class","role","Home","name","setName","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","toUpperCase","href","aria-haspopup","aria-labelledby","style","listStyle","onClick","HomeHelper","width","src","avatar","alt","email","dob","batch","gender","studentMobileNumber","aadharCard","fatherName","fatherMobileNumber","StudentAddSkill","setAvatar","skill","setSkill","imagehandler","URL","createObjectURL","files","skillData","alert","required","accept","StudentDetails","setDepartment","setYear","setSection","setResult","filterStudentHelper","filterByNameHelper","formHandler","placeholder","map","res","index","key","scope","senderName","senderRegistrationNumber","receiverName","receiverRegistrationNumber","obj","FacultyInterface","FacultyHomeHelper","designation","joiningYear","facultyMobileNumber","AttendenceFaculty","setSubjectCode","checkedValue","setCheckedValue","isLoading2","setIsLoading2","handleInputChange","tempCheck","checked","indexOf","splice","classNameName","selectedStudents","markAttendence","subjectCodeName","_id","ApproveRequest","skillApprovalReq","noteItem","AdminAddStudent","setEmail","setDob","setGender","setContactNumber","setFatherName","setFatherContactNumber","setAadharCard","AdminHomeHelper","studentCredential","split","reverse","join","AdminAddFaculty","setDesignation","facultyMobileNUmber","setFacultyMobileNumber","facultyCredential","subjectName","maxHours","lectureAttended","absentHours","totalLecturesByFaculty","FacultyStudentLoginPags","facultyRegNum","setFacultyRegNum","facultyPassword","setFacultyPassword","studentRegNum","setStudentRegNum","studentPassword","setStudentPassword","errors","errorsHelper","isFacultyLoading","setIsFacultyLoading","isStudentLoading","setIsStudentLoading","backgroundColor","borderRadius","padding","StudentUpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordData","FacultyUpdatePassword","withRouter","props","user","setUser","otp","setOtp","helper","setHelper","match","params","newPasswordWithOtp","submitOTPStudent","submitOTPFaculty","studentEmail","getOTPFaculty","aria-describedby","RecieverUserDetails","getStudentByRegName","setModal","formData","FormData","append","img","StudentSubjectList","totalLectures","FacultyUploadMarks","marks","setMarks","totalMarks","setTotalMarks","exam","setExam","setErrorHelper","uploadMarks","newMarks","findIndex","m","StudentTestPerformance","CycleTest1","subject","CycleTest2","Semester","toFixed","AdminAddAdmin","contactNumber","adminCredentails","AdminGetAllFaculty","form-inline","adminGetAllFaculty","searchCredentials","AdminGetAllSubjects","adminGetAllSubject","AdminHome","window","facultyJwtToken","currentTime","Date","now","exp","location","studentJwtToken","setStudentUser","adminJwtToken","setAdminUser","App","exact","path","component","StudentUpdateProfile","facultyInterface","AdminGetAllStudent","AdminGetAllSubject","StudentAttendencePage","StudentTestPerformace","FacultyUpdateProfile","ForgotPassword","Chat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df6e4e01.chunk.js","sourcesContent":["//ERROR\nexport const SET_ERRORS = \"SET_ERRORS\"\nexport const SET_ERRORS_HELPER = \"SET_ERRORS_HELPER\"\nexport const SET_FLAG = \"SET_FLAG\"\n\n//ADMIN\nexport const SET_ADMIN = \"SET_ADMIN\"\nexport const GET_SUBJECTS = \"GET_SUBJECTS\"\n\n\n\n//FACULTY\nexport const SET_FACULTY = \"SET_FACULTY\"\nexport const FACULTY_UPDATE_PASSWORD = \"FACULTY_UPDATE_PASSWORD\"\n\n//STUDENT\nexport const SET_STUDENT = \"SET_STUDENT\"\nexport const STUDENT_UPDATE_PASSWORD = \"STUDENT_UPDATE_PASSWORD\"\nexport const SET_OTP = \"SET_OTP\"\n\n\n","const isEmpty = value =>\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","\nimport { SET_FACULTY } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    faculty: {},\n    flag: false,\n    updateProfileFlag: false,\n    allSubjectCodeList: [],\n    fetchedStudents: [],\n    fetchedStudentsHelper: true\n}\n\n\nconst facultyReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACULTY: {\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                faculty: action.payload\n            }\n        }\n        case \"FETCH_STUDENTS\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: false,\n                fetchedStudents: action.payload\n            }\n        }\n        case \"FACULTY_UPDATE_PROFILE_FLAG\": {\n            return {\n                ...state,\n                updateProfileFlag: action.payload\n            }\n        }\n        case \"GET_SUBJECTCODE_LIST\": {\n            return {\n                ...state,\n                allSubjectCodeList: action.payload\n            }\n        }\n        case \"HELPER\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default facultyReducer","\nimport { SET_ADMIN, GET_SUBJECTS } from '../actionTypes'\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    admin: {},\n    adminAddFacultyFlag: false,\n    adminAddStudentFlag: false,\n    adminAddAdminFlag: false,\n    adminAddSubjectFlag: false,\n    allSubject: {},\n    allFaculty: [],\n    allStudent: [],\n    allSubject: []\n}\n\n\n\n\n\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ADMIN: \n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                admin: action.payload\n            }\n        case GET_SUBJECTS: {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        case \"ADMIN_ADD_FACULTY_FLAG\": {\n            return {\n                ...state,\n                adminAddFacultyFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_STUDENT_FLAG\": {\n            return {\n                ...state,\n                adminAddStudentFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_SUBJECT_FLAG\": {\n            return {\n                ...state,\n                adminAddSubjectFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_ADMIN_FLAG\": {\n            return {\n                ...state,\n                adminAddAdminFlag: action.payload\n            }\n        }\n        case \"GET_ALL_FACULTY\": {\n            return {\n                ...state,\n                allFaculty: action.payload\n            }\n        }\n        case \"GET_ALL_STUDENT\": {\n            return {\n                ...state,\n                allStudent: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECT\": {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n\nexport default adminReducer","\nimport { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    student: {},\n    alongsideStudent: {},\n    flag: false,\n    chatHistory: [],\n    regNumStudent: {},\n    privateChat: [],\n    privateChat2: [],\n    newerChats: [],\n    previousChats: [],\n    allSubjects: [],\n    attendence: [], \n    allMarks: {}\n}\n\n\nconst studentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STUDENT:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                student: action.payload\n            }\n        case \"CHAT_HELPER\":\n            return {\n                ...state,\n                alongsideStudent: action.payload\n            }\n        case SET_FLAG:\n            return {\n                ...state,\n                flag: true\n            }\n        case \"SET_CHAT\":\n            return {\n                ...state, \n                chatHistory : [state.chatHistory, action.payload]\n            }\n        case \"GET_STUDENT_BY_REG_NUM\": {\n            return {\n                ...state,\n                regNumStudent: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION\": {\n            return {\n                ...state,\n                privateChat: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION2\": {\n            return {\n                ...state,\n                privateChat2: action.payload\n            }\n        }\n        case \"GET_NEWER_CHATS\": {\n            return {\n                ...state,\n                newerChats: action.payload\n            }\n        }\n        case \"GET_PREVIOUS_CHATS\": {\n            return {\n                ...state,\n                previousChats: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECTS\": \n            return {\n                ...state,\n                allSubjects: action.payload\n            }\n        \n        case \"GET_ATTENDENCE\": \n            return {\n                ...state,\n                attendence: action.payload\n            }\n        \n        case \"GET_MARKS\": \n            return {\n                ...state,\n                allMarks: action.payload\n            }\n        \n        default:\n            return state\n        \n    } \n}\n\nexport default studentReducer","import { SET_ERRORS_HELPER } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrorsHelper = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS_HELPER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default setErrorsHelper\n\n\n","import { SET_ERRORS } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrors = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default setErrors\n\n\n","import { combineReducers } from 'redux';\nimport facultyReducer from './facultyReducer'\nimport adminReducer from './adminReducer'\nimport studentReducer from './studentReducer'\nimport errorReducerHelper from './errorReducerHelper'\nimport errorReducer from './errorReducer'\n\n\nexport default combineReducers({\n    faculty: facultyReducer,\n    admin: adminReducer,\n    student: studentReducer,\n    error: errorReducer,\n    errorHelper: errorReducerHelper\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n\n\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\n\nconst setFaculty = (data) => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    }\n}\n\nconst url = \"http://localhost:5000\"\n\nconst fetchStudentsHelper = (data) => {\n    return {\n        type: \"FETCH_STUDENTS\",\n        payload: data\n    }\n}\n\nconst subjectCodeListHelper = (data) => {\n    return {\n        type: \"GET_SUBJECTCODE_LIST\",\n        payload: data\n    }\n}\n\n\nexport const facultyLogin = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/login\",\n                data: facultyCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('facultyJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setFaculty(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const facultyUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const getOTPFaculty = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/faculty/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({ type: SET_FLAG })\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/postOTP\",\n                data: newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const fetchStudents = (department, year, section) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/fetchStudents\",\n                data: { department, year, section}\n            })\n            dispatch(fetchStudentsHelper(data.result))\n            dispatch(subjectCodeListHelper(data.subjectCode))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nconst facultyUpdateProfileFlag = (data) => {\n    return {\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\n        payload: data\n    }\n}\n\nexport const facultyUpdate = (updatedData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/faculty/updateProfile`,\n                data: updatedData\n            })\n            dispatch(facultyUpdateProfileFlag(true))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const markAttendence = (selectedStudents, subjectCode, department, year,\n           section) => {\n    return async(dispatch) => {\n        try {\n                await axios({\n                method: 'Post',\n                    url: url + \"/api/faculty/markAttendence\",\n                data: { selectedStudents, subjectCode, department, year, section}\n                })\n            alert(\"attendence has been marked successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n        }\n        catch (err) {\n           console.log(\"Error in marking attendence, faculty action\", err.message)\n        }\n    }\n}\n\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\n    department, year, section, ) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/uploadMarks\",\n                data: {\n                    subjectCode, exam, totalMarks, marks, department, year, section,\n                    }\n            })\n            alert(\"Mark uploaded successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setFacultyUser = data => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    };\n}\n\nexport const facultyLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('facultyJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setFaculty({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport {\n    SET_ADMIN, SET_ERRORS, \n    GET_SUBJECTS\n} from '../actionTypes'\n\nconst url = \"http://localhost:5000\"\n\nconst setAdmin = (data) => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    }\n}\n\nconst adminAddFacultyFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_FACULTY_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddStudentFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_STUDENT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddSubjectFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_SUBJECT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddAdminFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_ADMIN_FLAG\",\n        payload: data\n    }\n}\n\nconst getSubjctsHelper = (data) => {\n    return {\n        type: GET_SUBJECTS,\n        payload: data\n    }\n}\n\nconst adminGetAllFacultyHelper = (data) => {\n    return {\n        type: \"GET_ALL_FACULTY\",\n        payload: data\n    }   \n}\n\nconst adminGetAllStudentHelper = (data) => {\n    return {\n        type: \"GET_ALL_STUDENT\",\n        payload: data\n    }\n}\n\n\nconst adminGetAllSubjectHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECT\",\n        payload: data\n    }\n}\n\nexport const adminLogin = (adminCredential) => {\n    return async (dispatch) => {\n        try {\n            console.log(\"Admin Login Credentials\", adminCredential)\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/login\",\n                data: adminCredential\n            })\n            console.log(\"login response\", data)\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('adminJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setAdmin(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/admin/getSubjects\",\n            })\n            dispatch(getSubjctsHelper(data))\n        }\n        catch (err) {\n            console.log(\"Error in getting all subjects\", err.message)\n        }\n    }\n}\n\nexport const adminAddFaculty = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addFaculty\",\n                data: facultyCredential\n            })\n            dispatch(adminAddFacultyFlag(true))\n            alert(\"Faculty Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddStudent = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addStudent\",\n                data: studentCredential\n            })\n            dispatch(adminAddStudentFlag(true))\n            alert(\"Student Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddSubject = (subjectCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addSubject\",\n                data: subjectCredential\n            })\n            dispatch(adminAddSubjectFlag(true))\n            alert(\"Subject Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminAddAdmin = (adminCredentails) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addAdmin\",\n                data: adminCredentails\n            })\n            dispatch(adminAddAdminFlag(true))\n            alert(\"Admin Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminGetAllFaculty = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllFaculty\",\n                data: department\n            })\n            dispatch(adminGetAllFacultyHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllStudent = (searchCredentials) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllStudent\",\n                data: searchCredentials\n            })\n            dispatch(adminGetAllStudentHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubject = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllSubject\",\n                data: department\n            })\n            dispatch(adminGetAllSubjectHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setAdminUser = data => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    };\n}\n\nexport const adminLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('adminJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setAdmin({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_STUDENT, SET_ERRORS_HELPER, SET_ERRORS, STUDENT_UPDATE_PASSWORD, SET_OTP, SET_FLAG } from '../actionTypes'\n\nconst url = \"http://localhost:5000\"\n\n// export const setChatHistory = (data) => {\n//     return {\n//         type: \"SET_CHAT\",\n//         payload: data\n//     }\n// }\n\nconst setStudent = (data) => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    }\n}\n\n// const chatHelp = (data) => {\n//     return {\n//         type: \"CHAT_HELPER\",\n//         payload: data\n//     }\n// }\n\nconst getStudentByRegNameHelper = (data) => {\n    return {\n        type: \"GET_STUDENT_BY_REG_NUM\",\n        payload: data\n    }\n}\n\n\n// const privateConversation = (data) => {\n//     return {\n//         type: \"GET_PRIVATE_CONVERSATION\",\n//         payload: data\n//     }\n// }\n\n// const privateConversation2 = (data) => {\n//     return {\n//         type: \"GET_PRIVATE_CONVERSATION2\",\n//         payload: data\n//     }\n// }\n\n// const newerChatsHelper = (data) => {\n//     return {\n//         type: \"GET_NEWER_CHATS\",\n//         payload: data\n//     }\n// }\n\n// const previousChatsHelper = (data) => {\n//     return {\n//         type: \"GET_PREVIOUS_CHATS\",\n//         payload: data\n//     }\n// }\n\nconst getAllSubjectsHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECTS\",\n        payload: data\n    }\n}\n\nconst fetchAttendenceHelper = (data) => {\n    return {\n        type: \"GET_ATTENDENCE\",\n        payload: data\n    }\n}\n\nconst getMarksHelper = (data) => {\n    return {\n        type: \"GET_MARKS\",\n        payload: data\n    }\n    \n}\n\nexport const studentLogin = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/login\",\n                data: studentCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('studentJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setStudent(decoded))\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const studentUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const studentAddSkill = (skillData) => {\n    return async (dispatch) => {\n        try {\n            console.log(skillData);\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/StudentAddSkill\",\n                data: skillData\n            })\n            alert(\"Requested faculty to add skill\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n// export const chatHelper = (name) => {\n//     return async (dispatch) => {\n//         try {\n//             const { data } = await axios({\n//                 method: 'Post',\n//                 url: url + \"/api/student/getStudentByName\",\n//                 data: name\n//             })\n//             dispatch(chatHelp(data.result))\n//         }\n//         catch (err) {\n//             console.log('error in recent',err.message)\n//         }\n//     }\n// }\n\nexport const getStudentByRegName = (registrationNumber) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/getStudentByRegName\",\n                data: { registrationNumber }\n            })\n            dispatch(getStudentByRegNameHelper(data.result))\n        }\n        catch (err) {\n            console.log('Error in getting student by registration number', err.message)\n        }\n    }\n    \n}\n\n\nexport const getOTPStudent = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/student/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({type:SET_FLAG})\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPStudent = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/postOTP\" ,\n                data:newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err){\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n// export const sendMessage = (room,messageobj) => {\n//     return async () => {\n//         try {\n//             const { data } = await axios({\n//                 method: 'Post',\n//                 url: url + `/api/student/chat/${room}`,\n//                 data: messageobj\n//             })\n//         }\n//         catch (err) {\n//             console.log(\"Error in sending message\",err.message)\n//         }\n//     }\n// }\n\n\n// export const getPrivateConversation = (roomId) => {\n//     return async (dispatch) => {\n//         try {\n//             const { data } = await axios({\n//                 method: 'Get',\n//                 url: url + `/api/student/chat/${roomId}`,\n//             })\n//             dispatch(privateConversation(data.result))\n//         }\n//         catch (err) {\n//             console.log(\"Error in sending message\", err.message)\n//         }\n//     }\n// }\n\n// export const getPrivateConversation2 = (roomId) => {\n//     return async (dispatch) => {\n//         try {\n//             const { data } = await axios({\n//                 method: 'Get',\n//                 url: url + `/api/student/chat/${roomId}`,\n//             })\n//             dispatch(privateConversation2(data.result))\n//         }\n//         catch (err) {\n//             console.log(\"Error in sending message\", err.message)\n//         }\n//     }\n// }\n\n// export const previousChats = (senderName) => {\n//     return async (dispatch) => {\n//         try {\n//             const { data } = await axios({\n//                 method: 'Get',\n//                 url: url + `/api/student/chat/previousChats/${senderName}`,\n//             })\n//             dispatch(previousChatsHelper(data.result))\n//         }\n//         catch (err) {\n//             console.log(\"Error in sending message\", err.message)\n//         }\n//     }\n// }\n\n\n// export const newerChats = (receiverName) => {\n//     return async (dispatch) => {\n//         try {\n//             const { data } = await axios({\n//                 method: 'Get',\n//                 url: url + `/api/student/chat/newerChats/${receiverName}`,\n//             })\n//             dispatch(newerChatsHelper(data.result))\n//         }\n//         catch (err) {\n//             console.log(\"Error in sending message\", err.message)\n//         }\n//     }\n// }\n\nexport const studentUpdate = (updatedData) => {\n    return async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/student/updateProfile`,\n                data: updatedData\n            })\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const getAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getAllSubjects\"\n            })\n            dispatch(getAllSubjectsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const fetchAttendence = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/checkAttendence\"\n            })\n            dispatch(fetchAttendenceHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    \n    }\n}\n\nexport const getMarks = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getMarks\"\n            })\n           dispatch(getMarksHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in getting marks\", err.message)\n        }\n    }\n}\n\n\n\nexport const setStudentUser = data => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    };\n}\n\nexport const studentLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('studentJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setStudent({}));\n    };","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminLogin } from '../redux/action/adminAction'\nimport classnames from 'classnames'\n\n\n\nconst LoginPage = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch( )\n    const [registrationNumber, setRegistrationNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n    useEffect(() => {\n        if (store.admin.isAuthenticated) {\n            history.push('/admin')\n        }\n    }, [store.admin.isAuthenticated])\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const fromHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminLogin({registrationNumber, password}))\n       \n    }\n\n    useEffect(() => {\n        if (store.error ||\n            store.admin.isAuthenticated) {\n            setIsLoading(false)\n        }\n        \n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.isAuthenticated])\n\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\n                        <div>\n                            <h1 className=\"display-4 text-center\">ADMIN</h1>\n                            <form noValidate onSubmit={fromHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Registration Number</label>\n                                    <input onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\n                                        {'is-invalid' : error.registrationNumber\n                                        \n                                        })} id=\"emailId\" />\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">Password</label>\n                                    <input onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": error.password\n                                    })}  type=\"password\" id=\"passwordId\" />\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n    )\n}\n\nexport default LoginPage\n","import React, {useState, useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { studentLogout} from '../redux/action/studentAction'\n\n\nconst Home = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n        if (store.student.student.student.name) {\n            setName(store.student.student.student.name)\n        }\n    }, [store.student.student.student.name])\n    const dispatch = useDispatch()\n    \n    const logoutHandler = () => {\n        dispatch(studentLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\n                        {/* <h4 className=\"navbar-brand mt-1\" href=\"\"></h4> */}\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        ACADEMIC </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                      \n                                        <Link className=\"dropdown-item\" to=\"/student/getAllSubjects\">Student Subject List</Link>\n                                    </div>\n                                </li>\n                               \n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                                <li className='nav-item'>\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/StudentAddSkill\"><li>ADD Skill</li></Link></button>\n\n                                </li>\n                               \n                            </ul>\n                           \n                        </div>\n                        <div>\n                            <button style={{listStyle:\"none\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React,{useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport HomeHelper from '../Components/HomeHelper'\n\nconst Home = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8 mt-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.student.student.student.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.student.student.student.name}</h5>\n                                            <h5 className=\"card-title\">{store.student.student.student.registrationNumber}</h5>\n                                            <Link to='/student/updateProfile'>UPDATE PROFILE</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7 bg-dark  text-white\">\n                                    <table className=\"table \">\n                                        <tbody className=\"text-white\">\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.student.student.student.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.student.student.student.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.student.student.student.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date Of Birth</td>\n                                                <td>{store.student.student.student.dob}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Year</td>\n                                                <td>{store.student.student.student.year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.student.student.student.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Section</td>\n                                                <td>{store.student.student.student.section}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Batch</td>\n                                                <td>{store.student.student.student.batch}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Gender</td>\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender : \n                                                \n                                                   \"NA\"\n                                                }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.student.student.student.studentMobileNumber ?\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Aadhar Card</td>\n                                                <td>{store.student.student.student.aadharCard ? store.student.student.student.aadharCard : \"NA\"} </td>\n                                            </tr>\n                                            <tr>\n                                                <td>Father Name</td>\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Father Contact Number</td>\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </> : (history.push('/'))}\n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport HomeHelper from '../Components/HomeHelper'\r\n// import { studentUpdatePassword } from '../redux/action/studentAction'\r\nimport { studentAddSkill } from '../redux/action/studentAction'\r\n\r\n\r\n\r\n\r\nconst StudentAddSkill = () => {\r\n  const store = useSelector((store) => store)\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [skill, setSkill] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [file, setfile] = useState({});\r\n\r\n  const imagehandler = async(e) => {\r\n    // const img = e.target.files[0];\r\n    let value = URL.createObjectURL(e.target.files[0]);\r\n    // setImageUrl(value]);\r\n   \r\n    setAvatar(value);\r\n    // console.log(file);\r\n\r\n     \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (store.errorHelper) {\r\n      setError(store.errorHelper)\r\n      console.log(store.errorHelper)\r\n    }\r\n  }, [store.errorHelper])\r\n  const formHandler = (e) => {\r\n    e.preventDefault()\r\n  \r\n\r\n    dispatch(studentAddSkill({ registrationNumber: store.student.student.student.registrationNumber, skill, avatar,department: store.student.student.student.department}))\r\n  }\r\n  return (\r\n    <div>\r\n      {store.student.isAuthenticated ? <>\r\n        <HomeHelper />\r\n        <div className=\"container m-5\">\r\n          <div className=\"row m-5\">\r\n            <div className=\"col-md-5 m-auto\">\r\n              <form noValidate onSubmit={formHandler}>\r\n               \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"Skill\">Skill</label>\r\n                  <select\r\n                    onChange={(e) => setSkill(e.target.value)}\r\n                    className=\"form-control\"\r\n                    id=\"genderId\"\r\n                  >\r\n                    <option>Select</option>\r\n                    <option value=\"C++\">C++</option>\r\n                    <option value=\"Python\">Python</option>\r\n                    <option value=\"ReactJs\">ReactJs</option>\r\n                    <option value=\"NodeJs\">NodeJs</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"inputId\">Certificate</label>\r\n                  <input\r\n                    required\r\n                    className=\"form-control\"\r\n                    type=\"file\"\r\n                    accept=\".jpg,.png,.jpeg\"\r\n                    id=\"inputId\"\r\n                    onChange={imagehandler}\r\n                  ></input>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-info btn-block \">Add Skill</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div></> : (history.push('/'))}\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentAddSkill\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n// import {newerChats, previousChats} from '../redux/action/studentAction'\nimport axios from 'axios'\nimport HomeHelper from '../Components/HomeHelper'\nimport {Link, useHistory } from 'react-router-dom'\n\nconst StudentDetails = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [result, setResult] = useState([])\n\n\n\n    \n\n\n    const filterStudentHelper = async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: 'https://apna-erp.herokuapp.com/api/student/getAllStudents',\n                data: {\n                    department,\n                    year,\n                    section\n                }\n            })\n            setResult(data.result)\n        }\n        catch (err) {\n            console.log(\"Error in student register action\", err.message)\n        }\n    }\n\n    const filterByNameHelper = async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: 'https://apna-erp.herokuapp.com/api/student/getStudentByName',\n                data: {\n                    name\n                }\n            })\n            setResult(data.result)\n        }\n        catch (err) {\n            console.log(\"Error in student register action\", err)\n        }\n    }\n    \n\n    const formHandler = (e) => {\n        e.preventDefault()\n        if (name) {\n            filterByNameHelper()\n        }\n        else {\n            filterStudentHelper()\n        }\n    }\n  \n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    {result.length === 0 && <div className=\"row\">\n                        <div className=\"col-md-3 border mt-4\">\n                            <div className=\"row mt-3\">\n                                <div className=\"col mb-2\">\n                                    <form className=\"form-inline\" onSubmit={formHandler}>\n                                        <div className=\"form-group \">\n                                            <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Search by name\" type=\"text\" className=\"form-control\" />\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-block btn-info mt-1 \">Search</button>\n                                    </form>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4 mb-4 \">\n                                <div className=\"col\">\n                                    <form noValidate onSubmit={formHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"branchId\">Branch</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className=\"form-control\" id=\"bramchId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"E.E.E\" >E.E.E</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className=\"form-control\" id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <select onChange={(e) => setSection(e.target.value)} className=\"form-control\" id=\"sectionId\">\n                                                <option>Select</option>\n                                                <option value=\"A\">A</option>\n                                                <option value=\"B\">B</option>\n                                                <option value=\"C\">C</option>\n                                                <option value=\"D\">D</option>\n                                                <option value=\"E\">E</option>\n                                                <option value=\"F\">F</option>\n                                            </select>\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-info btn-block\">Search</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-9 border mt-4\">\n                            <div className=\"row justify-content-center \">\n                                <div className=\"col\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6 border\">\n                                            <h4 className=\"text-center\">New Chats</h4>\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    {\n                                                        store.student.newerChats.map((res, index) =>\n                                                            <tr key={index}>\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                <td>{res.senderName}</td>\n                                                                <td><Link to={`/student/${res.senderRegistrationNumber}`}>Explore</Link></td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        <div className=\"col-md-6 border\">\n                                            <h4 className=\"text-center\">Older Chats</h4>\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    {\n                                                        store.student.previousChats.map((res, index) =>\n                                                            <tr key={index}>\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                <td>{res.receiverName}</td>\n                                                                <td><Link to={`/student/${res.receiverRegistrationNumber}`}>Explore</Link></td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                </tbody>\n                                            </table>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>}\n\n                    {result.length !== 0 && <div className=\"row\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Chat</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {result.map((obj, index) =>\n                                        <tr key={index}>\n                                            <th scope=\"row\">{index + 1}</th>\n                                            <td>{obj.registrationNumber}</td>\n                                            <td>{obj.name}</td>\n                                            <td><Link to={`/student/${obj.registrationNumber}`}>Explore</Link></td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>}\n\n                </div></> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default StudentDetails\n","import React, {useState,useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector} from 'react-redux'\nimport {facultyLogout} from '../redux/action/facultyAction'\n\n\n\nconst Home = () => {\n    const store = useSelector((store)=>store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n\n        if (store.faculty.faculty.faculty.name) {\n            setName(store.faculty.faculty.faculty.name)\n        }\n    }, [store.faculty.faculty.faculty.name])\n    const logoutHandler = () => {\n        dispatch(facultyLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            {/* <Header /> */}\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">SRM</h4>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/attendenceFaculty\"><li>MARK ATTENDANCE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/uploadMarks\"><li>UPLOAD MARKS</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/approveRequest\"><li>SKILLS REQUESTS</li></Link></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <div>\n                            <button style={{listStyle:\"None\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\n\n\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\n\n\nconst FacultyInterface = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    return (\n        <>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"row\">\n                                <div className=\"col-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.faculty.faculty.faculty.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.name}</h5>\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.registrationNumber}</h5>\n                                            <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.faculty.faculty.faculty.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.faculty.faculty.faculty.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.faculty.faculty.faculty.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date Of Birth</td>\n                                                <td>{store.faculty.faculty.faculty.dob}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Designation</td>\n                                                <td>{store.faculty.faculty.faculty.designation}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.faculty.faculty.faculty.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.faculty.faculty.faculty.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Gender</td>\n                                                <td>{store.faculty.faculty.faculty.gender ? store.faculty.faculty.faculty.gender :\n\n                                                    \"NA\"\n                                                }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.faculty.faculty.faculty.facultyMobileNumber ?\n                                                    store.faculty.faculty.faculty.facultyMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </> : (history.push('/'))}\n           \n        </>\n\n\n    )\n}\n\nexport default FacultyInterface\n","import React, { useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport {fetchStudents,markAttendence } from '../redux/action/facultyAction'\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\nconst AttendenceFaculty = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [checkedValue, setCheckedValue] = useState([])\n    const [error, setError] = useState({})\n    const [flag, setFlag] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isLoading2, setIsLoading2] = useState(false)\n\n    const handleInputChange = (e) => {\n        const tempCheck = checkedValue\n        let index\n        if (e.target.checked)\n        {\n            tempCheck.push(e.target.value)\n        }\n        else {\n            index = tempCheck.indexOf(e.target.value)\n            tempCheck.splice(index,1)\n        }\n        setCheckedValue(tempCheck)\n    }\n    \n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(fetchStudents(department, year, section))\n       \n    }\n\n    useEffect(() => {\n        if (store.error || !store.faculty.fetchedStudentsHelper) {\n            setIsLoading(false)\n        }\n        \n    }, [store.error, store.faculty.fetchedStudentsHelper])\n\n \n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        setIsLoading2(true)\n        dispatch(markAttendence(checkedValue, subjectCode, department, year, section))\n        setCheckedValue([])\n        \n    }\n\n    useEffect(() => {\n        if (store.faculty.fetchedStudentsHelper) {\n            setIsLoading2(false)\n        }\n        \n    },[store.faculty.fetchedStudentsHelper])\n    \n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"branchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                           \n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Search</button>}\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select required onChange={(e) => setSubjectCode(e.target.value)} className=\"form-control\" id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                            </div>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <td><div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        </div></td>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value={obj._id} onChange={handleInputChange} id=\"defaultCheck1\" />\n                                                </div></td>\n                                                <td key={index}>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading2 && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading2 && <button type=\"submit\" className=\"btn btn-info ml-1  \">Submit</button>}\n                        </form>\n                    </div>\n                </div>\n                }</> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default AttendenceFaculty\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\nimport { facultyUpdatePassword } from '../redux/action/facultyAction'\r\n\r\n\r\n\r\n\r\nconst ApproveRequest = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    // const [oldPassword, setOldPassword] = useState('')\r\n    // const [newPassword, setNewPassword] = useState('')\r\n    // const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n    // const [isLoading, setIsLoading] = useState(false)\r\n    // const [error, setError] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     if (store.error) {\r\n    //         setError(store.error)\r\n    //     }\r\n    // }, [store.error])\r\n    // const formHandler = (e) => {\r\n    //     e.preventDefault()\r\n    //     setIsLoading(true)\r\n    //     dispatch(facultyUpdatePassword({ registrationNumber: store.faculty.faculty.faculty.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\r\n    // }\r\n    // useEffect(() => {\r\n\r\n    // }, [store.faculty])\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container m-5\">\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n\r\n\r\n                            {/* <h1>{store.faculty.faculty.faculty.skillApprovalReq[10].skill}</h1> */}\r\n\r\n                            <div className=\"col-md-7\">\r\n                                <table className=\"table border\">\r\n                                    <tbody>\r\n                                        <tr>\r\n\r\n                                            <th>Student </th>\r\n                                            <th>Skill </th>\r\n                                            <th>Certificate </th>\r\n                                        </tr>\r\n\r\n                                        {store.faculty.faculty.faculty.skillApprovalReq.map((noteItem, index) => {\r\n                                            return (\r\n\r\n                                                <tr>\r\n\r\n                                                    <td>{noteItem.registrationNumber}</td>\r\n                                                    <td>{noteItem.skill}</td>\r\n                                                    <td> <img src='{noteItem.avatar}' /> </td>\r\n                                                    <td>  <button type=\"submit\" className=\"btn btn-primary\">Approve</button> </td>\r\n\r\n\r\n                                                </tr>\r\n\r\n\r\n                                            );\r\n                                        })}\r\n\r\n\r\n                                 \r\n                                    </tbody>\r\n\r\n\r\n                                    {/* \r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Student</td>\r\n                                                <td>{store.faculty.faculty.faculty.skillApprovalReq[10].registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Skill</td>\r\n                                                <td>{store.faculty.faculty.faculty.skillApprovalReq[10].skill}</td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Certificate</td>\r\n                                                <td> <img src='{store.faculty.faculty.faculty.skillApprovalReq[10].avatar}' /> </td>\r\n                                                <td>{store.faculty.faculty.faculty.skillApprovalReq[10].avatar}</td>\r\n\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Approval</td>\r\n                                                <td>Approve</td>\r\n\r\n                                            </tr>\r\n                                           \r\n                                           \r\n                                        </tbody> */}\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n\r\n                            {/* <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Old Password</label>\r\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.oldPassword\r\n\r\n                                        })} id=\"emailId\" />\r\n                                    {error.oldPassword && (<div classNameName=\"invalid-feedback\">{error.oldPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">New Password</label>\r\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.newPassword\r\n                                    })}  type=\"password\" id=\"passwordId\" />\r\n                                    {error.newPassword && (<div classNameName=\"invalid-feedback\">{error.newPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\r\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.confirmNewPassword\r\n                                    })}  type=\"password\" id=\"passwordCId\" />\r\n                                    {error.confirmNewPassword && (<div classNameName=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-info btn-block \">Update Password</button>\r\n                            </form> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApproveRequest\r\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { adminLogout } from \"../redux/action/adminAction\";\n\nconst Home = () => {\n  const store = useSelector((store) => store);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    if (store.admin.admin.name) {\n      setName(store.admin.admin.name);\n    }\n  }, [store.admin.admin.name]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const logoutHandler = () => {\n    dispatch(adminLogout());\n    history.push(\"/\");\n  };\n  return (\n    <div className=\"container-fluid\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <h4 className=\"navbar-brand mt-1\" href=\"\">\n          Profile\n        </h4>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin\">\n                  <li>{name.toUpperCase()}</li>\n                </Link>\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/addFaculty\">\n                  <li>ADD FACULTY</li>\n                </Link>\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/addStudent\">\n                  <li>ADD STUDENT</li>\n                </Link>\n              </button>\n            </li>\n            {/* <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/addSubject\">\n                  <li>ADD SUBJECT</li>\n                </Link>\n              </button> */}\n            {/* </li> */}\n            <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/addAdmin\">\n                  <li>ADD ADMIN</li>\n                </Link>\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/allFaculties\">\n                  <li>OUR FACULTIES</li>\n                </Link>\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/allStudents\">\n                  <li>OUR STUDENTS</li>\n                </Link>\n              </button>\n            </li>\n            {/* <li className=\"nav-item\">\n              <button type=\"button\" className=\"btn\">\n                <Link to=\"/admin/allSubject\">\n                  <li>SUBJECTS</li>\n                </Link>\n              </button>\n            </li> */}\n          </ul>\n        </div>\n        <div>\n          <button\n            style={{ listStyle: \"None\" }}\n            onClick={logoutHandler}\n            type=\"button\"\n            className=\"btn\"\n          >\n            <li>LOGOUT</li>\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddStudent } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddStudent = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [section, setSection] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddStudent({\n            name,\n            email,\n            year,\n            department,\n            fatherName,\n            aadharCard,\n            gender,\n            section: section.toUpperCase(),\n            dob: dob.split(\"-\").reverse().join(\"-\"),\n            studentMobileNumber,\n            fatherMobileNumber\n        }))\n    } \n    useEffect(() => {\n        if (store.admin.adminAddStudentFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddStudentFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddStudentFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddStudentFlag])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Student Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.year\n                                                })} id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                        </div>\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.section\n                                                })} id=\"sectionId\" />\n                                            {error.section && (<div className=\"invalid-feedback\">{error.section}</div>)}\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fatherId\">Father Name</label>\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>:(history.push('/'))}\n            \n            </div>\n\n            \n      \n    )\n}\n\nexport default AdminAddStudent\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddFaculty } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddFaculty = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [designation, setDesignation] = useState('')\n    const [facultyMobileNUmber, setFacultyMobileNumber] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n           setError(store.error)\n       }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddFaculty({\n            name,\n            email,\n            designation,\n            facultyMobileNUmber,\n            department,\n            aadharCard,\n            gender,\n            dob: dob.split(\"-\").reverse().join(\"-\")}))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddFacultyFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddFacultyFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddFacultyFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    },[store.error,store.admin.adminAddFacultyFlag])\n    return (\n       \n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper/>\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Faculty Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"designationId\">Designation</label>\n                                            <select onChange={(e) => setDesignation(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.designation\n                                                })} id=\"designationId\">\n                                                <option>Select</option>\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\n                                                <option value=\"Senior Professer\">Senior Professer</option>\n                                            </select>\n                                            {error.designation && (<div className=\"invalid-feedback\">{error.designation}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Add Faculty</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>):(history.push('/'))}\n            \n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {fetchAttendence} from '../redux/action/studentAction'\n\nimport axios from 'axios'\nimport HomeHelper from '../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst Home = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n      dispatch(fetchAttendence())  \n    },[])\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Maximum Hours</th>\n                                        <th scope=\"col\">Present Hours</th>\n                                        <th scope=\"col\">Absent Hours</th>\n                                        <th scope=\"col\">Total Hours</th>\n                                        <th scope=\"col\">Attendence</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.attendence.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.maxHours}</td>\n                                                <td>{res.lectureAttended}</td>\n                                                <td>{res.absentHours}</td>\n                                                <td>{res.totalLecturesByFaculty}</td>\n                                                <td>{res.attendence}%</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n           \n            \n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, Link } from 'react-router-dom'\nimport { facultyLogin } from '../redux/action/facultyAction'\nimport { studentLogin } from '../redux/action/studentAction'\nimport classnames from 'classnames'\n\nimport '../Style/facultyStudentLogin.css'\n\n\n\n\nconst FacultyStudentLoginPags = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const [facultyRegNum, setFacultyRegNum] = useState('')\n    const [facultyPassword, setFacultyPassword] = useState('')\n    const [studentRegNum, setStudentRegNum] = useState('')\n    const [studentPassword, setStudentPassword] = useState('')\n    const [errors, setErrors] = useState({})\n    const [errorsHelper, setErrorsHelper] = useState({})\n    const [isFacultyLoading, setIsFacultyLoading] = useState(false)\n    const [isStudentLoading, setIsStudentLoading] = useState(false)\n\n\n    const history = useHistory()\n\n    useEffect(() => {\n        if (store.faculty.isAuthenticated) {\n            history.push('/faculty')\n        }\n    }, [store.faculty.isAuthenticated])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n    useEffect(() => {\n        if (store.student.isAuthenticated) {\n            history.push('/home')\n        }\n    }, [store.student.isAuthenticated])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorsHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n\n\n\n\n\n    const facultyFormHandler = (e) => {\n        e.preventDefault()\n        let registrationNumber;\n        let password;\n        setIsFacultyLoading(true)\n        dispatch(facultyLogin({ registrationNumber: facultyRegNum, password: facultyPassword }))\n    }\n\n    useEffect(() => {\n        if (store.error || store.faculty.isAuthenticated) {\n            setIsFacultyLoading(false)\n        }\n        else {\n            setIsFacultyLoading(true)\n        }\n    }, [store.error, store.faculty.isAuthenticated])\n\n    const studentFormHandler = (e) => {\n        e.preventDefault()\n        let registrationNumber;\n        let password;\n        setIsStudentLoading(true)\n        dispatch(studentLogin({ registrationNumber: studentRegNum, password: studentPassword }))\n    }\n\n    useEffect(() => {\n        if (store.errorHelper ||\n            store.student.isAuthenticated) {\n            setIsStudentLoading(false)\n        }\n        else {\n            setIsStudentLoading(false)\n        }\n\n    }, [store.errorHelper, store.student.isAuthenticated])\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\" id=\"trail\">\n                <div className=\"col-md-6\">\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\n                            <div>\n                                <h3 className=\"text-center \">FACULTY</h3>\n                                <form noValidate onSubmit={facultyFormHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"facRegId\">Registration Number</label>\n                                        <input onChange={(e) => setFacultyRegNum(e.target.value)} type=\"text\" value={facultyRegNum} className={classnames('form-control', {\n                                            'is-invalid': errors.registrationNumber\n                                        })}\n                                            id=\"facRegId\" />\n                                        {errors.registrationNumber && (\n                                            <div className=\"invalid-feedback\">{errors.registrationNumber}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"passwordFacId\">Password</label>\n                                        <input onChange={(e) => setFacultyPassword(e.target.value)} value={facultyPassword} className={classnames(\"form-control\", {\n                                            'is-invalid': errors.password\n                                        })}\n                                            type=\"password\" id=\"passwordFacId\" />\n                                        {errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isFacultyLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n\n                                    {!isFacultyLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                                </form>\n                                <p className=\"text-center mt-2 \"><Link className=\"text-center\" to=\"/forgotPassword/faculty\">Forgot Password</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\n                            <div>\n                                <h3 className=\"text-center\">STUDENT</h3>\n                                <form noValidate onSubmit={studentFormHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"studentId\">Registration Number</label>\n                                        <input onChange={(e) => setStudentRegNum(e.target.value)} type=\"text\" value={studentRegNum} className={classnames('form-control', {\n                                            'is-invalid': errorsHelper.registrationNumber\n                                        })}\n                                            id=\"studentId\" />\n                                        {errorsHelper.registrationNumber && (\n                                            <div className=\"invalid-feedback\">{errorsHelper.registrationNumber}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"passwordId\">Password</label>\n                                        <input onChange={(e) => setStudentPassword(e.target.value)} value={studentPassword} className={classnames(\"form-control\", {\n                                            'is-invalid': errorsHelper.password\n                                        })}\n                                            type=\"password\" id=\"passwordId\" />\n                                        {errorsHelper.password && (\n                                            <div className=\"invalid-feedback\">{errorsHelper.password}</div>\n                                        )}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isStudentLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isStudentLoading && <button type=\"submit\" className=\"btn btn-info btn-block \">Login</button>}\n\n                                </form>\n                                <p className=\"text-center\"><Link className=\"text-center\" to=\"/forgotPassword/student\">Forgot Password</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FacultyStudentLoginPags\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport HomeHelper from '../Components/HomeHelper'\nimport { studentUpdatePassword } from '../redux/action/studentAction'\n\n\n\n\nconst StudentUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setError(store.errorHelper)\n            console.log(store.errorHelper)\n        }\n    }, [store.errorHelper])\n    const formHandler = (e) => {\n        e.preventDefault()\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-5 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })}  type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })}  type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n\n           \n\n        </div>\n    )\n}\n\nexport default StudentUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\nimport { facultyUpdatePassword } from '../redux/action/facultyAction'\n\n\n\n\nconst FacultyUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(facultyUpdatePassword({ registrationNumber: store.faculty.faculty.faculty.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    useEffect(() => {\n        \n    }, [store.faculty])\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div classNameName=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })}  type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div classNameName=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })}  type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div classNameName=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n</> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\nimport classnames from 'classnames'\n\n\nconst ForgotPassword = (props) => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [user, setUser] = useState('')\n    const [email, setEmail] = useState('')\n    const [otp, setOtp] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [errors, setErrors] = useState({})\n    const [helper, setHelper] = useState(false)\n\n    useEffect(() => {\n        setUser(props.match.params.user)\n    }, [user])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.student.flag) {\n            setHelper(true)\n        }\n    },[store.student.flag])\n\n    const sendOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(getOTPStudent({ email }))\n        }\n        else if (user === \"faculty\") {\n           dispatch(getOTPFaculty({email}))\n        }\n    }\n\n    const submitOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword },history))\n        }\n        else if (user === \"faculty\")\n        {\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\n            }\n    }\n\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 m-auto\">\n                    {!helper ? <>\n                        <form noValidate onSubmit={sendOTPHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\n                                    'is-invalid': errors.email\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\n                                {errors.email && (\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\n                                )}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\n                        </form>\n                    </> : <>\n                            <form noValidate onSubmit={submitOTPHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\n                                        'is-invalid': errors.otp\n                                    })} id=\"exampleInputEmail1\" />\n                                    {errors.otp && (\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.newPassword\n                                    })} id=\"exampleInputEmail2\" />\n                                    {errors.newPassword && (\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.confirmNewPassword\n                                    })} id=\"exampleInputEmail3\" />\n                                    {errors.confirmNewPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\n                                    )}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword)\n","import React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { getStudentByRegName } from '../redux/action/studentAction'\nimport HomeHelper from '../Components/HomeHelper'\n\nconst RecieverUserDetails = (props) => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [registrationNumber, setRegistrationNumber] = useState(\"\")\n  \n\n\n    useEffect(() => {\n        setRegistrationNumber(props.match.params.registrationNumber)\n        dispatch(getStudentByRegName(registrationNumber))\n        \n    }, [registrationNumber]) \n\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.student.regNumStudent.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.student.regNumStudent.name}</h5>\n                                            <h5 className=\"card-title\">{}</h5>\n                                            <Link to={`/chat/${store.student.regNumStudent.registrationNumber}.${store.student.student.student.registrationNumber}`}>CHAT</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.student.regNumStudent.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.student.regNumStudent.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.student.regNumStudent.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Year</td>\n                                                <td>{store.student.regNumStudent.year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.student.regNumStudent.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Section</td>\n                                                <td>{store.student.regNumStudent.section}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Batch</td>\n                                                <td>{store.student.regNumStudent.batch}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n\n\n\n            </> : (history.push('/'))}\n        </div>\n\n    )\n}\n\nexport default RecieverUserDetails\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  studentUpdate,\n  studentLogout,\n  newerChats,\n  previousChats,\n} from \"../redux/action/studentAction\";\nimport HomeHelper from \"../Components/HomeHelper\";\n\nimport { useHistory, withRouter } from \"react-router-dom\";\n\nconst StudentUpdateProfile = () => {\n  const store = useSelector((store) => store);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [gender, setGender] = useState(\"\");\n  const [studentMobileNumber, setContactNumber] = useState(\"\");\n  const [fatherName, setFatherName] = useState(\"\");\n  const [fatherMobileNumber, setFatherContactNumber] = useState(\"\");\n  const [aadharCard, setAadharCard] = useState(\"\");\n  const [error, setError] = useState({});\n  const [avatar, setAvatar] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const imagehandler = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      let img = e.target.files[0];\n      console.log(img);\n      setAvatar(img);\n      // console.log(avatar);\n      \n    }\n  };\n\n  useEffect(() => {\n    if (store.error) {\n      setError(store.error);\n    }\n  }, [store.error]);\n\n  const formHandler = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"gender\", gender);\n    formData.append(\"studentMobileNumber\", studentMobileNumber);\n    formData.append(\"fatherName\", fatherName);\n    formData.append(\"fatherMobileNumber\", fatherMobileNumber);\n    formData.append(\"aadharCard\", aadharCard);\n    formData.append(\"avatar\", avatar);\n    formData.append(\"email\", store.student.student.student.email);\n    console.log(formData);\n    dispatch(studentUpdate(formData, history));\n    setModal(true);\n    alert(\"Kindly login again to see updates\");\n    dispatch(studentLogout());\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      {store.student.isAuthenticated ? (\n        <>\n          <HomeHelper />\n          <div className=\"container mt-5\">\n            <div className=\"row \">\n              <div className=\"col-md-5 w-100 m-auto\">\n                <form onSubmit={formHandler}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"inputId\">Profile Picture</label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"file\"\n                      accept=\".jpg,.png,.jpeg\"\n                      id=\"inputId\"\n                      onChange={imagehandler}\n                    ></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"genderId\">Gender</label>\n                    <select\n                      onChange={(e) => setGender(e.target.value)}\n                      className=\"form-control\"\n                      id=\"genderId\"\n                    >\n                      <option>Select</option>\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"numberId\">Contact Number</label>\n                    <input\n                      onChange={(e) => setContactNumber(e.target.value)}\n                      required\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"numberId\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"fatherId\">Father Name</label>\n                    <input\n                      onChange={(e) => setFatherName(e.target.value)}\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"fatherId\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                    <input\n                      onChange={(e) => setFatherContactNumber(e.target.value)}\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"fathercnId\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                    <input\n                      onChange={(e) => setAadharCard(e.target.value)}\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"aadharId\"\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        history.push(\"/\")\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(StudentUpdateProfile);\n","import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllSubjects } from '../../redux/action/studentAction'\nimport HomeHelper from '../../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentSubjectList = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    useEffect(() => {\n       dispatch(getAllSubjects())\n    },[])\n    return (\n        <>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Year</th>\n                                        <th scope=\"col\">Total Lectures</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.allSubjects.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.year}</td>\n                                                <td>{res.totalLectures}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n           \n            </>\n    )\n}\n\nexport default StudentSubjectList\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst FacultyUploadMarks = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch() \n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [marks, setMarks] = useState([])\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [totalMarks, setTotalMarks] = useState()\n    const [exam ,setExam] = useState(\"\")\n    const [error, setError] = useState({})\n    const [errorHelper, setErrorHelper] = useState({})\n\n   \n\n\n    const handleInputChange = (value, _id) => {\n    \n        const newMarks = [...marks]\n        let index = newMarks.findIndex(m => m._id === _id)\n        if (index === -1) {\n            newMarks.push({ _id, value })\n        }\n        else {\n           newMarks[index].value = value\n        }\n        setMarks(newMarks)\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n    \n       dispatch(fetchStudents(department, year,  section))\n\n    }\n\n\n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, department, section\n        ))\n    }\n\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"bramchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"semesterId\">Semester</label>\n                                <select onChange={(e) => setSemester(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.semester\n\n                                    })} id=\"semesterId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                </select>\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select onChange={(e) => setSubjectCode(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.subjectCode\n\n                                    })} id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                                {errorHelper.subjectCode && (<div classNameName=\"invalid-feedback\">{errorHelper.subjectCode}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"examId\">Exam</label>\n                                <select onChange={(e) => setExam(e.target.value)} value={exam} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.exam\n\n                                    })} id=\"examId\">\n                                    <option>Select</option>\n                                    <option value=\"CycleTest1\">Cycle Test 1</option>\n                                    <option value=\"CycleTest2\">Cylce Test 2</option>\n                                    <option value=\"Semester\">Semester</option>\n                                </select>\n                                {errorHelper.exam && (<div classNameName=\"invalid-feedback\">{errorHelper.exam}</div>)}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"marksId\">Total Marks</label>\n                                <input type=\"number\" className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.totalMarks\n\n                                    })} id=\"marksId\"\n                                    value={totalMarks} onChange={(e) => setTotalMarks(e.target.value)} />\n                                {errorHelper.totalMarks && (<div classNameName=\"invalid-feedback\">{errorHelper.totalMarks}</div>)}\n                            </div>\n\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                        <th scope=\"col\">Marks</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr key={index}>\n                                                <td>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-control\" required type=\"number\" value={obj.marks} onChange={(e) => handleInputChange(e.target.value, obj._id)} id=\"defaultCheck1\" />\n                                                </div></td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <button type=\"submit\" className=\"btn btn-primary ml-1\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n                }\n            </> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUploadMarks\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\n\n\nimport { facultyUpdate, facultyLogout} from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\n\n\nconst FacultyUpdateProfile = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [gender, setGender] = useState('')\n    const [facultyMobileNumber, setContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const imagehandler = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0]\n            setAvatar(img)\n        }\n    }\n\n\n    const formHandler = async (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"gender\", gender)\n        formData.append(\"facultyMobileNumber\", facultyMobileNumber)\n        formData.append(\"aadharCard\", aadharCard)\n        formData.append(\"avatar\", avatar)\n        formData.append(\"email\", store.faculty.faculty.faculty.email)\n        setIsLoading(true)\n        dispatch(facultyUpdate(formData, history))\n        alert(\"Kindly login again to see updates\")\n        dispatch(facultyLogout())\n        history.push('/')\n    }\n\n    useEffect(() => {\n        if (store.faculty.updateProfileFlag) {\n            setIsLoading(false)\n        }\n    }, [store.faculty.updateProfileFlag])\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col-md-5 w-100 m-auto\">\n                            <form onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"inputId\">Profile Picture</label>\n                                    <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"genderId\">Gender</label>\n                                    <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                        <option>Select</option>\n                                        <option value=\"Male\">Male</option>\n                                        <option value=\"Female\">Female</option>\n                                        <option value=\"Other\">Other</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"numberId\">Contact Number</label>\n                                    <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                    <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Update</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default withRouter(FacultyUpdateProfile)\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getMarks } from '../../redux/action/studentAction'\nimport HomeHelper from '../../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentTestPerformance = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getMarks())\n    }, [])\n\n\n\n    return (\n\n        <>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n\n                <div className=\"container\">\n\n                    {store.student.allMarks.CycleTest1 &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.CycleTest1.length !== 0 ? <>\n                                    <h4>Cycle Test 1</h4>\n                                    <table className=\"table border\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.CycleTest1.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n\n\n                    }\n\n                    {store.student.allMarks.CycleTest2 &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.CycleTest2.length !== 0 ? <>\n                                    <h4>Cycle Test 2</h4>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.CycleTest2.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n                    }\n\n                    {store.student.allMarks.Semester &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.Semester.length !== 0 ? <>\n                                    <h4>Semester</h4>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.Semester.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{((res.marks / res.totalMarks) * 100).toFixed(2)}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n\n                    }\n                </div></> : (history.push('/'))}\n\n        </>\n\n    )\n}\n\nexport default StudentTestPerformance\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddAdmin } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\n\n\n\nconst AdminAddAdmin = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [dob, setDob] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n        else {\n            setError({})\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddAdmin({\n            name,\n            email,\n            department,\n            contactNumber,\n            dob: dob.split(\"-\").reverse().join(\"-\")\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddAdminFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddAdminFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddAdminFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.adminAddAdminFlag])\n\n    return (\n\n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Admin Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.contactNumber\n                                                })} id=\"numberId\" />\n                                            {error.contactNumber && (<div className=\"invalid-feedback\">{error.contactNumber}</div>)}\n                                        </div>\n                                    </div>\n                                </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Admin</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>) : (history.push('/'))}\n\n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddAdmin\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllFaculty } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllFaculty({ department }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allFaculty.length !== 0) {\n            setIsLoading(false)\n        }\n        \n    }, [store.admin.allFaculty.length])\n\n    \n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form form-inline noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">Department</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"E.C.E\">E.C.E</option>\n                                        <option value=\"C.S.E\">C.S.E</option>\n                                        <option value=\"E.E.E\">E.E.E</option>\n                                        <option value=\"I.T\">I.T</option>\n                                        <option value=\"Mechanical\">Mechanical</option>\n                                        <option value=\"Civil\">Civil</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            \n                            {store.admin.allFaculty.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Joining Year</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allFaculty.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.joiningYear}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n                           \n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { adminGetAllStudent } from \"../../redux/action/adminAction\";\nimport AdminHomeHelper from \"../../Components/AdminHomeHelper\";\nimport classnames from \"classnames\";\n\nconst AdminGetAllFaculty = () => {\n  const store = useSelector((store) => store);\n  const dispatch = useDispatch();\n  const [department, setDepartment] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [skill, setSkill] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState({});\n  const history = useHistory();\n\n  const formHandler = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    dispatch(adminGetAllStudent({ department, year, skill }));\n  };\n\n  useEffect(() => {\n    if (store.admin.allStudent.length !== 0) {\n      setIsLoading(false);\n    }\n  }, [store.admin.allStudent.length]);\n  return (\n    <div>\n      {store.admin.isAuthenticated ? (\n        <>\n          <AdminHomeHelper />\n          <div className=\"container\">\n            <div className=\"row mt-5\">\n              <div className=\"col-md-4\">\n                <form noValidate onSubmit={formHandler}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"departmentId\">Department</label>\n                    <select\n                      onChange={(e) => setDepartment(e.target.value)}\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": error.department,\n                      })}\n                      id=\"departmentId\"\n                    >\n                      <option>Select</option>\n                      <option value=\"E.C.E\">E.C.E</option>\n                      <option value=\"C.S.E\">C.S.E</option>\n                      <option value=\"I.T\">I.T</option>\n                      <option value=\"E.E.E\">E.E.E</option>\n                      <option value=\"Mechanical\">Mechanical</option>\n                      <option value=\"Civil\">Civil</option>\n                    </select>\n                    {error.department && (\n                      <div className=\"invalid-feedback\">{error.department}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"yearId\">Year</label>\n                    <select\n                      onChange={(e) => setYear(e.target.value)}\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": error.year,\n                      })}\n                      id=\"yearId\"\n                    >\n                      <option>Select</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                    </select>\n                    {error.year && (\n                      <div className=\"invalid-feedback\">{error.year}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"skill\">Skill</label>\n                    <select\n                      onChange={(e) => setSkill(e.target.value)}\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": error.skill,\n                      })}\n                      id=\"yearId\"\n                    >\n                      <option>Select</option>\n                      <option value=\"pyhton\">python</option>\n                      <option value=\"java\">java</option>\n                      <option value=\"reactjs\">reactjs</option>\n                      <option value=\"cpp\">cpp</option>\n                    </select>\n                    {error.year && (\n                      <div className=\"invalid-feedback\">{error.year}</div>\n                    )}\n                  </div>\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-md-1\">\n                      {isLoading && (\n                        <div class=\"spinner-border text-primary\" role=\"status\">\n                          <span class=\"sr-only\">Loading...</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  {!isLoading && (\n                    <button type=\"submit\" className=\"btn btn-info btn-block  \">\n                      Search\n                    </button>\n                  )}\n                </form>\n              </div>\n              <div className=\"col-md-8\">\n                {store.admin.allStudent.length !== 0 && (\n                  <table className=\"table border\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">S.No</th>\n                        <th scope=\"col\">Registration Number</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Section</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {store.admin.allStudent.map((res, index) => (\n                        <tr key={index}>\n                          <th scope=\"row\">{index + 1}</th>\n                          <td>{res.registrationNumber}</td>\n                          <td>{res.name}</td>\n                          <td>{res.email}</td>\n                          <td>{res.section}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                )}\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        history.push(\"/\")\n      )}\n    </div>\n  );\n};\n\nexport default AdminGetAllFaculty;\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllSubject } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllSubjects = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllSubject({ department, year }))\n\n    }\n    useEffect(() => {\n        if (store.admin.allSubject.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allSubject.length])\n    return (\n        <div>\n            <div>\n                {store.admin.isAuthenticated ? <>\n                    <AdminHomeHelper />\n                    <div className=\"container\">\n                        <div className=\"row mt-5\">\n                            <div className=\"col-md-4\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">Department</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"E.C.E\">E.C.E</option>\n                                            <option value=\"C.S.E\">C.S.E</option>\n                                            <option value=\"E.E.E\">E.E.E</option>\n                                            <option value=\"I.T\">I.T</option>\n                                            <option value=\"Mechanical\">Mechanical</option>\n                                            <option value=\"Civil\">Civil</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                                   \n                                </form>\n\n\n                            </div>\n                            <div className=\"col-md-8\">\n\n                                {store.admin.allSubject.length !== 0 && <table className=\"table border\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">S.No</th>\n                                            <th scope=\"col\">Subject Code</th>\n                                            <th scope=\"col\">Subject Name</th>\n                                            <th scope=\"col\">Total Lectures</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            store.admin.allSubject.map((res, index) =>\n                                                <tr key={index}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{res.subjectCode}</td>\n                                                    <td>{res.subjectName}</td>\n                                                    <td>{res.totalLectures}</td>\n                                                </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>}\n\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AdminGetAllSubjects\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\n\nconst AdminHome = () => {\n    const store = useSelector((store) => store)\n\n    const history = useHistory()\n    return (\n        <div>\n           \n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-2\">\n                        </div>\n                        <div className=\"col-8\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.admin.admin.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.admin.admin.name}</h5>\n                                            <h5 className=\"card-title\">{store.admin.admin.registrationNumber}</h5>\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.admin.admin.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.admin.admin.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.admin.admin.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.admin.admin.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.admin.admin.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.admin.admin.contactNumber ?\n                                                    store.admin.admin.contactNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-2\">\n                        </div>\n                    </div>\n                </div>\n                </> : (history.push('/'))}\n                \n        </div>\n    )\n}\n\nexport default AdminHome\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./redux/utils/setAuthToken\";\nimport store from \"./redux/store\";\n\nimport { setFacultyUser, facultyLogout } from \"./redux/action/facultyAction\";\n\nimport {\n  setAdminUser,\n  adminLogout,\n  adminGetAllStudent,\n} from \"./redux/action/adminAction\";\n\nimport { setStudentUser, studentLogout } from \"./redux/action/studentAction\";\n\nimport LoginPage from \"./Pages/LoginPage\";\nimport Home from \"./Pages/StudentHome\";\n\nimport StudentAddSkill from \"./Pages/StudentAddSkill\";\nimport StudentDetails from \"./Pages/StudentDetails\";\nimport facultyInterface from \"./Pages/FacultyInterface\";\nimport AttendenceFaculty from \"./Pages/AttendenceFaculty\";\nimport ApproveRequest from \"./Pages/ApproveRequest\";\n\nimport AdminAddStudent from \"./Pages/AdminAddStudent\";\nimport AdminAddFaculty from \"./Pages/AdminAddFaculty\";\nimport AdminAddSubject from \"./Pages/AdminAddSubject\";\nimport StudentAttendencePage from \"./Pages/StudentAttendencePage\";\nimport FacultyStudentLoginPags from \"./Pages/FacultyStudentLoginPags\";\nimport StudentUpdatePassword from \"./Pages/StudentUpdatePassword\";\nimport FacultyUpdatePassword from \"./Pages/FacultyUpdatePassword\";\nimport ForgotPassword from \"./Pages/ForgotPassword\";\nimport Chat from \"./Pages/Chat\";\nimport RecieverUserDetails from \"./Pages/RecieverUserDetails\";\nimport StudentUpdateProfile from \"./Pages/StudentUpdateProfile\";\n\nimport StudentSubjectList from \"./Pages/Student/StudentSubjectList\";\n\nimport FacultyUploadMarks from \"./Pages/Faculty/FacultyUploadMarks\";\n\nimport FacultyUpdateProfile from \"./Pages/Faculty/FacultyUpdateProfile\";\n\nimport StudentTestPerformace from \"./Pages/Student/StudentTestPerformance\";\n\nimport AdminAddAdmin from \"./Pages/Admin/AdminAddAdmin\";\n\nimport AdminGetAllFaculty from \"./Pages/Admin/AdminGetAllFaculty\";\n\nimport AdminGetAllStudent from \"./Pages/Admin/AdminGetAllStudents\";\n\nimport AdminGetAllSubject from \"./Pages/Admin/AdminGetAllSubjects\";\n\nimport AdminHome from \"./Pages/Admin/AdminHome\";\n\nif (window.localStorage.facultyJwtToken) {\n  setAuthToken(localStorage.facultyJwtToken);\n  const decoded = jwt_decode(localStorage.facultyJwtToken);\n\n  store.dispatch(setFacultyUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(facultyLogout());\n    window.location.href = \"/\";\n  }\n} else if (window.localStorage.studentJwtToken) {\n  setAuthToken(localStorage.studentJwtToken);\n  const decoded = jwt_decode(localStorage.studentJwtToken);\n\n  store.dispatch(setStudentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(studentLogout());\n    window.location.href = \"/\";\n  }\n} else if (window.localStorage.adminJwtToken) {\n  setAuthToken(localStorage.adminJwtToken);\n  const decoded = jwt_decode(localStorage.adminJwtToken);\n\n  store.dispatch(setAdminUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(adminLogout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  const store = useSelector((store) => store);\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={FacultyStudentLoginPags} />\n          <Route exact path=\"/adminLogin\" component={LoginPage} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route\n            exact\n            path=\"/student/updateProfile\"\n            component={StudentUpdateProfile}\n          />\n          <Route exact path=\"/studentDetails\" component={StudentDetails} />\n          <Route exact path=\"/faculty\" component={facultyInterface} />\n          <Route\n            exact\n            path=\"/attendenceFaculty\"\n            component={AttendenceFaculty}\n          />\n          <Route exact path=\"/admin\" component={AdminHome} />\n          <Route exact path=\"/admin/addStudent\" component={AdminAddStudent} />\n          <Route exact path=\"/admin/addFaculty\" component={AdminAddFaculty} />\n          {/* <Route exact path=\"/admin/addSubject\" component={AdminAddSubject} /> */}\n          <Route exact path=\"/admin/addAdmin\" component={AdminAddAdmin} />\n          <Route\n            exact\n            path=\"/admin/allFaculties\"\n            component={AdminGetAllFaculty}\n          />\n          <Route\n            exact\n            path=\"/admin/allStudents\"\n            component={AdminGetAllStudent}\n          />\n          <Route\n            exact\n            path=\"/admin/allSubject\"\n            component={AdminGetAllSubject}\n          />\n          <Route\n            exact\n            path=\"/student/attendence\"\n            component={StudentAttendencePage}\n          />\n          <Route\n            exact\n            path=\"/student/updatePassword\"\n            component={StudentUpdatePassword}\n          />\n          <Route \n            exact \n            path=\"/student/StudentAddSkill\" \n            component={StudentAddSkill} />\n          <Route\n            exact\n            path=\"/student/testPerformance\"\n            component={StudentTestPerformace}\n          />\n          <Route\n            exact\n            path=\"/faculty/updatePassword\"\n            component={FacultyUpdatePassword}\n          />\n          <Route\n            exact\n            path=\"/faculty/uploadMarks\"\n            component={FacultyUploadMarks}\n          />\n          <Route\n            exact\n            path=\"/faculty/approveRequest\"\n            component={ApproveRequest}\n          />\n          <Route\n            exact\n            path=\"/faculty/updateProfile\"\n            component={FacultyUpdateProfile}\n          />\n          <Route\n            exact\n            path=\"/student/getAllSubjects\"\n            component={StudentSubjectList}\n          />\n          <Route\n            exact\n            path=\"/forgotPassword/:user\"\n            component={ForgotPassword}\n          />\n          <Route exact path=\"/chat/:room\" component={Chat} />\n          <Route\n            exact\n            path=\"/student/:registrationNumber\"\n            component={RecieverUserDetails}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}